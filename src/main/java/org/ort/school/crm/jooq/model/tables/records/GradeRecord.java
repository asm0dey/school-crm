/*
 * This file is generated by jOOQ.
*/
package org.ort.school.crm.jooq.model.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.ort.school.crm.jooq.model.tables.Grade;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GradeRecord extends UpdatableRecordImpl<GradeRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -1663915569;

    /**
     * Setter for <code>PUBLIC.GRADE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.GRADE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.GRADE.GRADE_NO</code>.
     */
    public void setGradeNo(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.GRADE.GRADE_NO</code>.
     */
    public Integer getGradeNo() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.GRADE.GRADE_LETTER</code>.
     */
    public void setGradeLetter(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.GRADE.GRADE_LETTER</code>.
     */
    public String getGradeLetter() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Grade.GRADE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Grade.GRADE.GRADE_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Grade.GRADE.GRADE_LETTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getGradeNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getGradeLetter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getGradeNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getGradeLetter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord value2(Integer value) {
        setGradeNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord value3(String value) {
        setGradeLetter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GradeRecord
     */
    public GradeRecord() {
        super(Grade.GRADE);
    }

    /**
     * Create a detached, initialised GradeRecord
     */
    public GradeRecord(Integer id, Integer gradeNo, String gradeLetter) {
        super(Grade.GRADE);

        set(0, id);
        set(1, gradeNo);
        set(2, gradeLetter);
    }
}
