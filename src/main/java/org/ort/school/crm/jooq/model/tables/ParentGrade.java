/*
 * This file is generated by jOOQ.
*/
package org.ort.school.crm.jooq.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.ort.school.crm.jooq.model.Indexes;
import org.ort.school.crm.jooq.model.Keys;
import org.ort.school.crm.jooq.model.Public;
import org.ort.school.crm.jooq.model.tables.records.ParentGradeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParentGrade extends TableImpl<ParentGradeRecord> {

    private static final long serialVersionUID = -2016343916;

    /**
     * The reference instance of <code>PUBLIC.PARENT_GRADE</code>
     */
    public static final ParentGrade PARENT_GRADE = new ParentGrade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ParentGradeRecord> getRecordType() {
        return ParentGradeRecord.class;
    }

    /**
     * The column <code>PUBLIC.PARENT_GRADE.PARENT_ID</code>.
     */
    public final TableField<ParentGradeRecord, Long> PARENT_ID = createField("PARENT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PARENT_GRADE.GRADE_ID</code>.
     */
    public final TableField<ParentGradeRecord, Integer> GRADE_ID = createField("GRADE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.PARENT_GRADE</code> table reference
     */
    public ParentGrade() {
        this(DSL.name("PARENT_GRADE"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.PARENT_GRADE</code> table reference
     */
    public ParentGrade(String alias) {
        this(DSL.name(alias), PARENT_GRADE);
    }

    /**
     * Create an aliased <code>PUBLIC.PARENT_GRADE</code> table reference
     */
    public ParentGrade(Name alias) {
        this(alias, PARENT_GRADE);
    }

    private ParentGrade(Name alias, Table<ParentGradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ParentGrade(Name alias, Table<ParentGradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_1, Indexes.CONSTRAINT_INDEX_13, Indexes.PRIMARY_KEY_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ParentGradeRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_13D;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ParentGradeRecord>> getKeys() {
        return Arrays.<UniqueKey<ParentGradeRecord>>asList(Keys.CONSTRAINT_13D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ParentGradeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ParentGradeRecord, ?>>asList(Keys.CONSTRAINT_1, Keys.CONSTRAINT_13);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentGrade as(String alias) {
        return new ParentGrade(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentGrade as(Name alias) {
        return new ParentGrade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ParentGrade rename(String name) {
        return new ParentGrade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ParentGrade rename(Name name) {
        return new ParentGrade(name, null);
    }
}
