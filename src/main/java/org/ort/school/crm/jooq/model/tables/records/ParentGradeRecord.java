/*
 * This file is generated by jOOQ.
*/
package org.ort.school.crm.jooq.model.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.ort.school.crm.jooq.model.tables.ParentGrade;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParentGradeRecord extends UpdatableRecordImpl<ParentGradeRecord> implements Record2<Long, Integer> {

    private static final long serialVersionUID = 1212337810;

    /**
     * Setter for <code>PUBLIC.PARENT_GRADE.PARENT_ID</code>.
     */
    public void setParentId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.PARENT_GRADE.PARENT_ID</code>.
     */
    public Long getParentId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PARENT_GRADE.GRADE_ID</code>.
     */
    public void setGradeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.PARENT_GRADE.GRADE_ID</code>.
     */
    public Integer getGradeId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ParentGrade.PARENT_GRADE.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ParentGrade.PARENT_GRADE.GRADE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getGradeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getGradeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentGradeRecord value1(Long value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentGradeRecord value2(Integer value) {
        setGradeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentGradeRecord values(Long value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParentGradeRecord
     */
    public ParentGradeRecord() {
        super(ParentGrade.PARENT_GRADE);
    }

    /**
     * Create a detached, initialised ParentGradeRecord
     */
    public ParentGradeRecord(Long parentId, Integer gradeId) {
        super(ParentGrade.PARENT_GRADE);

        set(0, parentId);
        set(1, gradeId);
    }
}
