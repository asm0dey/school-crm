plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'application'
    id 'info.solidsoft.pitest' version '1.6.0'
    id "nu.studer.rocker" version "3.0.2"
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "com.github.ben-manes.versions" version "0.38.0"
    id 'jacoco'
}
ext {
    joobyVersion = "1.6.8"
    kotestVersion = "4.6.0"
}


repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    implementation "org.jooby:jooby-undertow:$joobyVersion"
    implementation("org.jooby:jooby-lang-kotlin:$joobyVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jooby:jooby-pac4j2:$joobyVersion"
    implementation "org.jooby:jooby-jooq:$joobyVersion"
    implementation "org.jooby:jooby-flyway:$joobyVersion"
    implementation "org.jooby:jooby-hbv:$joobyVersion"
    implementation "org.jooq:jooq-codegen:3.14.9"
    implementation "org.jooq:jooq:3.14.9"
    implementation "org.mindrot:jbcrypt:0.4"
    implementation "org.jooby:jooby-assets:$joobyVersion"
    implementation "org.jooby:jooby-csl:$joobyVersion"
    implementation "org.jooby:jooby-whoops:$joobyVersion"
    implementation "javax.el:javax.el-api:3.0.0"
    implementation "org.jooby:jooby-rocker:$joobyVersion"
    implementation "org.jooby:jooby-metrics:$joobyVersion"
    implementation "org.jooby:jooby-quartz:$joobyVersion"
    implementation "org.jooby:jooby-jackson:$joobyVersion"
    implementation "com.mashape.unirest:unirest-java:1.4.9"
    implementation "org.webjars:materializecss:1.0.0"
    implementation "org.webjars:jquery:3.6.0"
    implementation "org.webjars:summernote:0.8.10"
    implementation "org.webjars.bower:umbrella:2.7.0"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.4"
    implementation("com.automation-remarks:kirk:0.8.5") {
        exclude group: 'org.jetbrains.kotlin'
    }
    runtimeOnly "com.h2database:h2:1.4.200"
    runtimeOnly "org.postgresql:postgresql:42.2.20"
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation "org.mockito:mockito-core:3.10.0"
    testImplementation "com.winterbe:expekt:0.5.0"
    testImplementation "net.andreinc:mockneat:0.4.7"
    testImplementation "org.apache.httpcomponents:fluent-hc:4.5.13"
    testImplementation "org.testcontainers:postgresql:1.15.3"
    testImplementation "org.testcontainers:selenium:1.15.3"
    testImplementation "com.github.kittinunf.fuel:fuel:2.3.1"
    testImplementation "com.sangupta:murmur:1.0.0"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-property:$kotestVersion"
    testImplementation "io.kotest:kotest-plugins-pitest:4.4.3"
    testImplementation "ch.tutteli.atrium:atrium-infix-en_GB:0.16.0"
}

group = 'org.ort.school'
version = '1.9.0'
sourceCompatibility = '8'


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
//    include '**/*Test.class'
//    include '**/*IT.class'
    useJUnitPlatform()
}

tasks.test {
    useJUnitPlatform()
}

sourceSets {
//    main.rocker.srcDirs = ['public']
    main.java.srcDirs = [file("$buildDir/generated-src/rocker/"), file('src/main/java')]
//    main.java.srcDirs += 'src/main/java'
    main.kotlin.srcDirs = [file("$buildDir/generated-src/rocker/"), file('src/main/java')]
//    main.kotlin.srcDirs += "$buildDir/generated-src/rocker/main"
}
rocker {
//    skip false
//    outputBaseDirectory = "$buildDir/generated-src/rocker"
//    extendsClass = 'org.jooby.rocker.RequestRockerTemplate'
//    optimize = true
//    skipTouch true
    configurations {
        main {
//            skip = false
            templateDir = file('public')
            outputDir = file("$buildDir/generated-src/rocker")
            optimize = true  // optional
            extendsClass = 'org.jooby.rocker.RequestRockerTemplate'
//            skipTouch true
        }
    }
}
pitest {
    targetClasses = ['org.ort.*']  //by default "${project.group}.*"
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    testPlugin = "Kotest"
    avoidCallsTo = ["kotlin.jvm.internal"]
}
compileKotlin {
    dependsOn compileRocker
}

mainClassName = 'org.ort.school.app.SchoolCRMKt'

build.dependsOn 'pitest'
